
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	#map $arg_Tenant $tenant {
	 # default "";
	  #(.*) $1;
	#}
	
	#map $arg_AccessToken $token {
	 # default "";
	 # (.*) $1;
	#}
	
	map $tenant $global_tenant {
	  default "";
	  ~*(.+)    $1;        
	}

    map $token $global_token {
	  default "";
	  ~*(.+)    $1;        
	}

    map $sent_http_tenant $tenant {
	  ~*(.+) $sent_http_tenant;
	  ""     $tenant;
	}

    map $sent_http_accesstoken $token {
	   ~*(.+) $sent_http_accesstoken;
	   ""     $token;
	}	
	
	
    server {
        listen       80;
        server_name  10.1.54.198;
		
		

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

       # location / {
        #    root   html;
         #   index  index.html index.htm;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
	
	#This is working with full url given via proxy like http://10.1.54.198/LoginSpringMVC/dummy?tenant=Sumit&token=1234
	 #location ~* ^/(.*) {
	  #error_log logs/tomcat.log debug;
	  #rewrite ^/(.*)?tenant=(.*)&token=(.*)$ /$1?tenant=$2&token=$3;
	  #proxy_pass http://10.1.54.198:8080;
	#}



	
location ^~ /ui/ {
    proxy_pass http://10.1.54.198:5601;
}

location ^~ /bundles/ {
    proxy_pass http://10.1.54.198:5601;
}

location ^~ /plugins/ {
    proxy_pass http://10.1.54.198:5601;
}


location ~* ^/(.*) {

error_log logs/kibana.log debug;

set $tenant "";
set $token "";
set $additional "";

set $check "";

if ($request_uri ~ "^(.*)(?:\?|%3F)Tenant(?:=|%3D)(.*)(?:&|%26)AccessToken(?:=|%3D)([a-zA-Z0-9-]{36})$") {
    set $tenant $2;
    set $token $3;
    set $check "1${check}";
}

#if ($request_uri ~ "^(.*)(?:\?|%3F)Tenant(?:=|%3D)(.*)(?:&|%26)AccessToken(?:=|%3D)([a-zA-Z0-9-]{36})(.+)$") {
 #   set $tenant $2;
  #  set $token $3;
   # set $check "1${check}";
    #return 302 $1$4?Tenant=$tenant&AccessToken=$token;
#}

if ($http_referer ~ "^(.*)(?:\?|%3F)Tenant(?:=|%3D)(.*)(?:&|%26)AccessToken(?:=|%3D)([a-zA-Z0-9-]{36})$") {
set $tenant $2;
set $token $3;
set $check "2${check}";
}

if ($request_uri ~ "(.*)app/kibana(.*)$") {
set $check "3${check}"; 
}

if ($http_referer ~ "(.*)app/kibana(.*)$") {
set $check "4${check}"; 
}

if ($check = 2) {
  set $additional ?Tenant=$tenant&AccessToken=$token;
  return 301 $request_uri/$additional;
}

if ($check = 32) {
  set $additional ?Tenant=$tenant&AccessToken=$token;
  return 301 $request_uri/$additional;
}

if ($check = 432) {
  set $additional ?Tenant=$tenant&AccessToken=$token;
  return 301 $request_uri/$additional;
}

#rewrite ^/(.*)?Tenant=(.*)&AccessToken=(.*)$ /$1;

#if ($tenant = "") {
#set $tenant $http_tenant;
#set $token $http_accesstoken;
#}

#if ($tenant = "") {
#set $tenant $sent_http_tenant;
#set $token $sent_http_accesstoken;
#}

#if ($tenant = "") {
#set $tenant $upstream_http_Tenant;
#set $token $upstream_http_AccessToken;
#}

#set $http_tenant $tenant;
#set $http_accesstoken $token;

#set $sent_http_tenant $tenant;
#set $sent_http_accesstoken $token;

#set $upstream_http_Tenant $tenant;
#set $upstream_http_AccessToken $token;

add_header Tenant $tenant;
add_header AccessToken "Bearer ${token}";
add_header Authorization "Basic ZWxhc3RpYzpjaGFuZ2VtZQ==";

proxy_set_header X-Forwarded-Host 10.1.54.198;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_pass http://10.1.54.198:5601;
#proxy_redirect http://10.1.54.198/ http://10.1.54.198:5601/;
proxy_redirect http://10.1.54.198:5601/ http://10.1.54.198/;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection 'upgrade';
proxy_set_header Host http://10.1.54.198:5601;
proxy_cache_bypass $http_upgrade;
proxy_set_header Authorization "Basic ZWxhc3RpYzpjaGFuZ2VtZQ==";
proxy_set_header Tenant $tenant;
proxy_set_header AccessToken "Bearer ${token}";

}

	
	
    }
	
	server {
	
	listen       5180;
    server_name  10.1.54.198;

	location / {
	error_log logs/downstream_proxy.log debug;
	
	set $runuser "";
	
	if ($request_uri ~ "^(.*)(?:\?|%3F)User(?:=|%3D)([a-zA-Z0-9-]+)$") {
    set $runuser $2;
}

    proxy_pass http://10.1.54.198;
    proxy_set_header runasuser $runuser;
	}
	
	}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
